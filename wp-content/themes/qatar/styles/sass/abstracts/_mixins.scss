// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

// =============================================================================
// media breakpoint
// =============================================================================

@mixin media-breakpoint-down($size){
  @if $size == xxs {
    @media only screen and (max-width: 320.98px) { @content ; }
  }
  @else if $size == xs {
    @media only screen and (max-width: 575.98px) { @content ; }
  }
  @else if $size == sm {
    @media only screen and (max-width: 767.98px) { @content ; }
  }
  @else if $size == md {
    @media only screen and (max-width: 991.98px) { @content ; }
  }
  @else if $size == lg {
    @media only screen and (max-width: 1279.98px) { @content ; }
  }
  @else if $size == xl {
    @media only screen and (max-width: 1439.98px) { @content ; }
  }
}


@mixin media-breakpoint-up($size){
  @if $size == xxs {
    @media only screen and (min-width: 321px) { @content ; }
  }
  @else if $size == xs {
    @media only screen and (min-width: 576px) { @content ; }
  }
  @else if $size == sm {
    @media only screen and (min-width: 768px) { @content ; }
  }
  @else if $size == md {
    @media only screen and (min-width: 992px) { @content ; }
  }
  @else if $size == lg {
    @media only screen and (min-width: 1280px) { @content ; }
  }
  @else if $size == xl {
    @media only screen and (min-width: 1440px) { @content ; }
  }
}

// =============================================================================
// Mixin display flex
// =============================================================================

@mixin display-box($display: flex, $align: center, $justify: center){
  display: $display;
  align-items: $align;
  justify-content: $justify;
}


// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;

  $extmods: (
          eot: "?",
          svg: "#" + str-replace($name, " ", "_")
  );

  $formats: (
          otf: "opentype",
          ttf: "truetype"
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote("../assets/fonts/" + $path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}